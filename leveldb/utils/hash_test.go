package utils

import "testing"

func TestHash(t *testing.T) {
	type suit struct {
		data []byte
		seed uint32
		hash uint32
	}
	cases := make([]suit, 0)
	cases = append(cases, suit{
		data: []byte{0x62},
		seed: 0xbc9f1d34,
		hash: 0xef1345c4,
	}, suit{
		data: []byte{
			0x01, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00,
			0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x18, 0x28, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		},
		seed: 0x12345678,
		hash: 0xf333dabb,
	})

	for _, v := range cases {
		hash := Hash(v.data, v.seed)
		if hash != v.hash {
			t.Fatalf("Hash Test Expected %v, but got %v", v.hash, hash)
		}
	}
}
